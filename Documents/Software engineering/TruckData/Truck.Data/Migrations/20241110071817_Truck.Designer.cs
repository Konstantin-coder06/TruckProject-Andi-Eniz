// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruckData.Data;

#nullable disable

namespace Truck.Data.Migrations
{
    [DbContext(typeof(ShipmentDbContext))]
    [Migration("20241110071817_Truck")]
    partial class Truck
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TruckData.Data.Entities.CompanyStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompaniesStocks");
                });

            modelBuilder.Entity("TruckData.Data.Entities.CompanyStock_Shipment", b =>
                {
                    b.Property<int>("Shipment_Id")
                        .HasColumnType("int");

                    b.Property<int>("CompanyStock_Id")
                        .HasColumnType("int");

                    b.HasKey("Shipment_Id", "CompanyStock_Id");

                    b.HasIndex("CompanyStock_Id");

                    b.ToTable("CompaniesStocks_Shipments");
                });

            modelBuilder.Entity("TruckData.Data.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DriverPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TruckCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TruckCompanyId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("TruckData.Data.Entities.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DeliveryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfStock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("TruckData.Data.Entities.TruckCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MainTruckAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckCompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckCompanyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckCompanyPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrucksCompanies");
                });

            modelBuilder.Entity("TruckData.Data.Entities.TruckCompany_Shipment", b =>
                {
                    b.Property<int>("Shipment_Id")
                        .HasColumnType("int");

                    b.Property<int>("TruckCompany_Id")
                        .HasColumnType("int");

                    b.HasKey("Shipment_Id", "TruckCompany_Id");

                    b.HasIndex("TruckCompany_Id");

                    b.ToTable("TruckCompanies_Shipments");
                });

            modelBuilder.Entity("TruckData.Data.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiscenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TruckCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TruckCompanyId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TruckData.Data.Entities.CompanyStock_Shipment", b =>
                {
                    b.HasOne("TruckData.Data.Entities.CompanyStock", "CompanyStock")
                        .WithMany()
                        .HasForeignKey("CompanyStock_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruckData.Data.Entities.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("Shipment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyStock");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("TruckData.Data.Entities.Driver", b =>
                {
                    b.HasOne("TruckData.Data.Entities.TruckCompany", "TruckCompany")
                        .WithMany("Drivers")
                        .HasForeignKey("TruckCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruckCompany");
                });

            modelBuilder.Entity("TruckData.Data.Entities.TruckCompany_Shipment", b =>
                {
                    b.HasOne("TruckData.Data.Entities.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("Shipment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruckData.Data.Entities.TruckCompany", "TruckCompany")
                        .WithMany()
                        .HasForeignKey("TruckCompany_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("TruckCompany");
                });

            modelBuilder.Entity("TruckData.Data.Entities.Vehicle", b =>
                {
                    b.HasOne("TruckData.Data.Entities.TruckCompany", "TruckCompany")
                        .WithMany("Vehicles")
                        .HasForeignKey("TruckCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruckCompany");
                });

            modelBuilder.Entity("TruckData.Data.Entities.TruckCompany", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
